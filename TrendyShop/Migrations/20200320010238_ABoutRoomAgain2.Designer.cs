// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrendyShop.Data;

namespace TrendyShop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200320010238_ABoutRoomAgain2")]
    partial class ABoutRoomAgain2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrendyShop.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastEntrance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TrendyShop.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("DefaultSalary")
                        .HasColumnType("real");

                    b.Property<DateTime>("LastPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastRestart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PendingPayment")
                        .HasColumnType("real");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<float>("TotalSalary")
                        .HasColumnType("real");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TrendyShop.Models.ExpendableProduct", b =>
                {
                    b.Property<int>("ExpendableProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpendableProductId");

                    b.ToTable("ExpendableProducts");
                });

            modelBuilder.Entity("TrendyShop.Models.GastronomicProduct", b =>
                {
                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Cost", "Name");

                    b.ToTable("GastronomicProducts");
                });

            modelBuilder.Entity("TrendyShop.Models.Incidence", b =>
                {
                    b.Property<int>("IncidenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LodgingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IncidenceId");

                    b.HasIndex("LodgingDate");

                    b.ToTable("Incidences");
                });

            modelBuilder.Entity("TrendyShop.Models.Lodging", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ExtraCharge")
                        .HasColumnType("int");

                    b.Property<bool>("Prepaid")
                        .HasColumnType("bit");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Lodgings");
                });

            modelBuilder.Entity("TrendyShop.Models.Maintenance", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("MaintenanceId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("TrendyShop.Models.PackExpedableP", b =>
                {
                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("ExpProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PackageId", "ExpProductId");

                    b.HasIndex("ExpProductId");

                    b.ToTable("PackExpedables");
                });

            modelBuilder.Entity("TrendyShop.Models.PackGastronomicP", b =>
                {
                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Cost", "Name");

                    b.ToTable("PackGastronomics");
                });

            modelBuilder.Entity("TrendyShop.Models.PurchasePerLodging", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("Name", "Cost", "Date");

                    b.HasIndex("Cost", "Name");

                    b.ToTable("PurchasePerLodgings");
                });

            modelBuilder.Entity("TrendyShop.Models.Reservation", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Companion")
                        .HasColumnType("int");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FinishedOrCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("Romantic")
                        .HasColumnType("bit");

                    b.Property<int?>("StandardPrice")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("TrendyShop.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("TrendyShop.Models.RoomProduct", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("Name", "Cost");

                    b.HasIndex("Cost", "Name");

                    b.ToTable("RoomProducts");
                });

            modelBuilder.Entity("TrendyShop.Models.StorageRow", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Cost")
                        .HasColumnType("real");

                    b.Property<int>("AmountAvailable")
                        .HasColumnType("int");

                    b.Property<int>("AmountInRooms")
                        .HasColumnType("int");

                    b.HasKey("Name", "Cost");

                    b.HasIndex("Cost", "Name");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("TrendyShop.Models.Incidence", b =>
                {
                    b.HasOne("TrendyShop.Models.Lodging", null)
                        .WithMany("Incidences")
                        .HasForeignKey("LodgingDate");
                });

            modelBuilder.Entity("TrendyShop.Models.Lodging", b =>
                {
                    b.HasOne("TrendyShop.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("TrendyShop.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("TrendyShop.Models.PackExpedableP", b =>
                {
                    b.HasOne("TrendyShop.Models.ExpendableProduct", "ExpendableProduct")
                        .WithMany()
                        .HasForeignKey("ExpProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrendyShop.Models.PackGastronomicP", b =>
                {
                    b.HasOne("TrendyShop.Models.GastronomicProduct", "GastronomicProduct")
                        .WithMany()
                        .HasForeignKey("Cost", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrendyShop.Models.PurchasePerLodging", b =>
                {
                    b.HasOne("TrendyShop.Models.GastronomicProduct", "GastronomicProduct")
                        .WithMany()
                        .HasForeignKey("Cost", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrendyShop.Models.RoomProduct", b =>
                {
                    b.HasOne("TrendyShop.Models.GastronomicProduct", "GastronomicProduct")
                        .WithMany()
                        .HasForeignKey("Cost", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrendyShop.Models.StorageRow", b =>
                {
                    b.HasOne("TrendyShop.Models.GastronomicProduct", "GastronomicProduct")
                        .WithMany()
                        .HasForeignKey("Cost", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
